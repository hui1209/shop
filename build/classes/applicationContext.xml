<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

<!-- spring容器注册 -->
<context:annotation-config></context:annotation-config>
<!-- 自动扫描配置 -->
<context:component-scan base-package="com">
		<context:exclude-filter type="annotation" 
			expression="org.springframework.stereotype.Controller"/>
</context:component-scan>
<!-- 读取数据库相关信息的配置文件 -->
<!-- <context:property-placeholder location="classpath:db.properties"/> -->
<!-- 配置数据源 -->
<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	<!-- 配置数据库连接 -->
	<property name="driverClass" value="com.mysql.jdbc.Driver" />
	<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/shop?characterEncoding=utf-8" />
	<property name="user" value="root" />
	<property name="password" value="000000" />
	
	<!-- 配置连接池 -->
	<!-- 初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
	<property name="initialPoolSize" value="3"></property>
	<!-- 连接池中保留的最小连接数。Default: 3 -->
	<property name="minPoolSize" value="3"></property>
	<!-- 连接池中保留的最大连接数。Default: 15 -->
	<property name="maxPoolSize" value="15"></property>
	<!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
	<property name="acquireIncrement" value="3"></property>
	<!-- 最大空闲时间，1800秒内未使用则连接被丢弃，若为0则永不丢弃。Default: 0 -->
	<property name="maxIdleTime" value="1800"></property>
	<!-- 获取连接超时的时间 -->
	<property name="checkoutTimeout" value="10000" />
	<!-- 获取连接失败时的重试次数 -->
	<property name="acquireRetryAttempts" value="2" />
</bean>
<!-- 配置session工厂 -->
<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<!-- 引入数据源 -->
	<property name="dataSource" ref="dataSource" />
	<!-- 读取mybatis配置文件
		注:此节点可以省略.省略后mapper映射文件中不能使用别名
	 -->
	<property name="configLocation" value="classpath:myBatis-config.xml" />
	<!-- 引入mapper映射文件 -->
	<property name="mapperLocations" value="classpath:com/dao/*.xml"></property>
</bean>



<!-- 配置转换器,对于在basePackage中设置的包(包括子包)下的接口，
	如果在Mapper.xml文件中定义过,	将被转换成spring的bean(实例对象)，
	再将转换好的bean通过@Autowired注解向对应的接口对象注入-->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	<property name="basePackage" value="com.dao"/>
</bean>

<!-- 声明式事务管理aop -->
<!-- 1.配置事务管理器,管理数据源事务处理 -->
<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource" />
</bean>
<!-- 2.配置事务通知 -->
<tx:advice id="txAdvice" transaction-manager="txManager">
	<tx:attributes>
		<!-- 默认只处理运行时异常，可加rollback-for="Exception/Throwable"等处理所有异常或包括错误 -->
		<tx:method name="insert*" propagation="REQUIRED"
			rollback-for="Exception" />
		<tx:method name="update*" propagation="REQUIRED"
			rollback-for="Exception" />
		<tx:method name="delete*" propagation="REQUIRED"
			rollback-for="Exception" />
		<!-- 支持当前事务，如果当前没有事务，就以非事务方式执行 -->
		<tx:method name="*" propagation="SUPPORTS" />
	</tx:attributes>
</tx:advice>
<!-- 3.配置切面织入的范围 -->
<aop:config>
	<aop:advisor advice-ref="txAdvice"
		pointcut="execution(* com.service.impl.*.*(..))" />
</aop:config>	
</beans>











